/* Глава 1. Введение в JavaScript */
// Все, что следует за двумя символами косой черты, является комментарием.
// Читайте коментарии внимательно: в них объсняется код JavaScript.
// Переменная представляет собой символическое имя значения.
// Переменные объявляются с помощью ключевого слово let:
let x; // Объявление переменной пр имени x.
// Присваивать значения переменным можно посредством знака =.
x = 0; // Теперь переменая x имеет значение 0.
x; // => 0; переменная оценивается в свое значение.
// JavaScript поддерживает несколько типов значений.

x = 1; // Числа.
x = 0.01; // Числа могут быть целыми или вещественными.
x = "hello world"; // Строки текста в кавычках.
x = "JavaScript"; // Одинарные кавычки тоже устанавливают
// границы строк.
x = true; // Булевское значение.
x = false; // Другое булевское значение.
x = null; // null - это специальное значение, которое означает отсутствие значения.
x = undefined; // undefined - eщё

x = 1; // Числа.
x = 0.01; // Числа могут быть целыми или вещественными.
x = "hello world"; // Строки текста в кавычках.
x = "JavaScript"; // Одинарные кавычки тоже устанавливают
// границы строк.
x = true; // Булевское значение.
x = false; // Другое булевское значение.
x = null; // null - это специальное значение, которое означает отсутствие значения.
x = undefined; // undefined - eщё одно специальное значение, поднобное null

// Самым важным типом данных JavaScript является объект.
// Объект - это коллекция пар  имя/значение или отображений строки на значение.
let book = { // Объекты заключаются в фигурные скобки.
  topic: "JavaScript", // Свойства topic имеет значение  JavaScript.
  edition: 7, // Свойства edition имеет значение  7.
}; // Фигурная скобка помечает конец объекта.
// Доступ к свойствам объекта осуществляется с помощью . или []:
book.topic; // => "JavaScript"
book["edition"]; // => 7: ещё один способ доступа к значениям свойств.
book.author = "Flanagan"; // Новые свойства создаются посредством присваивания.
book.contents = {}; // {} - пустой объект, не имеющий свойств.
// Условный доступ к свойствам с помощью ?. (ES2020):
